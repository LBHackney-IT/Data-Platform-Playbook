"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[3843],{3905:function(t,e,o){o.d(e,{Zo:function(){return d},kt:function(){return f}});var n=o(7294);function r(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function a(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function i(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function c(t,e){if(null==t)return{};var o,n,r=function(t,e){if(null==t)return{};var o,n,r={},a=Object.keys(t);for(n=0;n<a.length;n++)o=a[n],e.indexOf(o)>=0||(r[o]=t[o]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)o=a[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}var p=n.createContext({}),l=function(t){var e=n.useContext(p),o=e;return t&&(o="function"==typeof t?t(e):i(i({},e),t)),o},d=function(t){var e=l(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var o=t.components,r=t.mdxType,a=t.originalType,p=t.parentName,d=c(t,["components","mdxType","originalType","parentName"]),s=l(o),f=r,y=s["".concat(p,".").concat(f)]||s[f]||u[f]||a;return o?n.createElement(y,i(i({ref:e},d),{},{components:o})):n.createElement(y,i({ref:e},d))}));function f(t,e){var o=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=o.length,i=new Array(a);i[0]=s;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:r,i[1]=c;for(var l=2;l<a;l++)i[l]=o[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}s.displayName="MDXCreateElement"},6566:function(t,e,o){o.r(e),o.d(e,{assets:function(){return d},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=o(3117),r=o(102),a=(o(7294),o(3905)),i=["components"],c={title:"Production to pre-production data sync",description:"Overview of how data is copied from production to pre-production",tags:["playbook"],layout:"layout"},p=void 0,l={unversionedId:"playbook/ingesting-data/production-to-pre-production-sync",id:"playbook/ingesting-data/production-to-pre-production-sync",title:"Production to pre-production data sync",description:"Overview of how data is copied from production to pre-production",source:"@site/docs/playbook/ingesting-data/010-production-to-pre-production-sync.md",sourceDirName:"playbook/ingesting-data",slug:"/playbook/ingesting-data/production-to-pre-production-sync",permalink:"/Data-Platform-Playbook/playbook/ingesting-data/production-to-pre-production-sync",draft:!1,editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/ingesting-data/010-production-to-pre-production-sync.md",tags:[{label:"playbook",permalink:"/Data-Platform-Playbook/tags/playbook"}],version:"current",sidebarPosition:10,frontMatter:{title:"Production to pre-production data sync",description:"Overview of how data is copied from production to pre-production",tags:["playbook"],layout:"layout"},sidebar:"docs",previous:{title:"Ingesting data from an API to the Data Platform",permalink:"/Data-Platform-Playbook/playbook/ingesting-data/ingesting-api-data"},next:{title:"Tips on writing an API Ingestion script for AWS Lambda",permalink:"/Data-Platform-Playbook/playbook/ingesting-data/tips-on-how-to-write-an-API-Lambda-script"}},d={},u=[{value:"Architecture",id:"architecture",level:2},{value:"Production to pre-production sync:",id:"production-to-pre-production-sync",level:3},{value:"Clean up of data older than 90 days:",id:"clean-up-of-data-older-than-90-days",level:3},{value:"Process",id:"process",level:2},{value:"Production to pre-production sync:",id:"production-to-pre-production-sync-1",level:3},{value:"Clean up of data older than 90 days:",id:"clean-up-of-data-older-than-90-days-1",level:3}],s={toc:u};function f(t){var e=t.components,c=(0,r.Z)(t,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,c,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This section explains the process used to copy data from the data platform production environment into pre-production"),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("h3",{id:"production-to-pre-production-sync"},"Production to pre-production sync:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"S3-replication",src:o(9638).Z,width:"691",height:"481"})),(0,a.kt)("h3",{id:"clean-up-of-data-older-than-90-days"},"Clean up of data older than 90 days:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Production to pre production sync architecture",src:o(8770).Z,width:"735",height:"821"})),(0,a.kt)("h2",{id:"process"},"Process"),(0,a.kt)("h3",{id:"production-to-pre-production-sync-1"},"Production to pre-production sync:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Data is ingested via any means into the production zones"),(0,a.kt)("li",{parentName:"ol"},"The data is replicated across to the equivalent pre-production zone in near real time.")),(0,a.kt)("p",null,"Important points:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Only new or updated files are replicated to pre-production at the point they are added or modified in production"),(0,a.kt)("li",{parentName:"ul"},"AWS guarantees 99.9% of files/data is replicated to pre-production within 15 minutes but in reality it is much quicker than this"),(0,a.kt)("li",{parentName:"ul"},"There is no deletion or overwriting of data in pre-production via this method"),(0,a.kt)("li",{parentName:"ul"},"This sync process does not update the glue catalogs in pre-production it only syncs across the raw data files. To make the data visible through Athena the relevant Glue crawler will need to be triggered manually in pre-production")),(0,a.kt)("h3",{id:"clean-up-of-data-older-than-90-days-1"},"Clean up of data older than 90 days:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"When the CI/CD pipeline runs in Github a custom Docker image is built and pushed to the Elastic Container Registry in the Data Platform Production environment."),(0,a.kt)("li",{parentName:"ol"},"One Elastic Container Service for each zone is then created by Terraform in the form of Fargate tasks. These three tasks are configured by Terraform to run on a schedule. At the time of writing this schedule is once a week."),(0,a.kt)("li",{parentName:"ol"},"The script then deletes any data in the pre-production bucket that is older than the configured period"),(0,a.kt)("li",{parentName:"ol"},"At the time of writing this configurable period is 90 days")))}f.isMDXComponent=!0},8770:function(t,e,o){e.Z=o.p+"assets/images/prod-to-pre-prod-sync-architecture-e41a68d1cf1acea7d441b9e7c4dc09b8.png"},9638:function(t,e,o){e.Z=o.p+"assets/images/s3-replication-21ed3542378f336a3a7b4b97576667eb.png"}}]);