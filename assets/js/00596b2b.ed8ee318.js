"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[1237],{3674:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(4848),o=t(8453);const a={title:"Glue Studio workshop with Parking Analysts",description:"",tags:["workshops"],layout:"layout"},i=void 0,s={id:"workshop/aws_glue_studio_parking",title:"Glue Studio workshop with Parking Analysts",description:"",source:"@site/docs/workshop/aws_glue_studio_parking.md",sourceDirName:"workshop",slug:"/workshop/aws_glue_studio_parking",permalink:"/Data-Platform-Playbook/workshop/aws_glue_studio_parking",draft:!1,unlisted:!1,editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/workshop/aws_glue_studio_parking.md",tags:[{inline:!0,label:"workshops",permalink:"/Data-Platform-Playbook/tags/workshops"}],version:"current",frontMatter:{title:"Glue Studio workshop with Parking Analysts",description:"",tags:["workshops"],layout:"layout"},sidebar:"docs",previous:{title:"Scheduling Liberator Glue Jobs",permalink:"/Data-Platform-Playbook/playbook/transforming-data/using-aws-glue/practical-examples/scheduling-liberator-glue-jobs"},next:{title:"1. Introduction to Time Series Helpers",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/introduction"}},l={},d=[{value:"Prerequisities",id:"prerequisities",level:2},{value:"Learning objectives",id:"learning-objectives",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Prototyping your transformation using Presto SQL",id:"prototyping-your-transformation-using-presto-sql",level:2},{value:"Moving your query to AWS Glue Studio",id:"moving-your-query-to-aws-glue-studio",level:2},{value:"Cleaning up",id:"cleaning-up",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"prerequisities",children:"Prerequisities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Have access to the Parking Liberator Raw zone."}),"\n",(0,r.jsxs)(n.li,{children:["Have experience with writing SQL queries in ",(0,r.jsx)(n.a,{href:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/querying-data-using-sql",children:"AWS Athena"})," already."]}),"\n",(0,r.jsx)(n.li,{children:"Have experience running AWS Glue Crawlers."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"learning-objectives",children:"Learning objectives"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Know how to create a batch transformation job written in SparkSQL, hosted inside of AWS Glue Studio."}),"\n",(0,r.jsx)(n.li,{children:"Aware there are differences between the Presto SQL language, and SparkSQL lanugage."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["As part of this workshop, we will be using ",(0,r.jsx)(n.a,{href:"https://spark.apache.org/",children:"Apache Spark"})," to perform batch\ntransformation on the Hackney parking Liberator dataset."]}),"\n",(0,r.jsx)(n.p,{children:"The Data Platform provides a managed installation of Apache Spark called AWS Glue Studio.\nWe'll be using this tool to create an AWS Glue job which will aggregate permit renewal\ninformation."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://spark.apache.org/docs/latest/api/sql/index.html",children:"SparkSQL"})," is a SQL API on top of the Spark batch processing engine.\nAWS Glue Studio also provide support for writing jobs in the ",(0,r.jsx)(n.a,{href:"https://www.python.org/",children:"Python"}),"\nand ",(0,r.jsx)(n.a,{href:"https://www.scala-lang.org/",children:"Scala"})," programming languages, if you prefer those."]}),"\n",(0,r.jsx)(n.p,{children:"This guide takes the reader through using SparkSQL, and assumes experience of writing\nand debugging SQL queries."}),"\n",(0,r.jsx)(n.p,{children:"Once written, AWS Glue batch jobs can be scheduled to run unattended over very large\ndatasets."}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["Throughout this documentation, whereever you see ",(0,r.jsx)(n.strong,{children:"NAME"}),', replace this with your name\ne.g. "adrian".']}),(0,r.jsx)(n.p,{children:"This is so that this guide can be performed independently by multiple people at the same time.\nWhen writing jobs outside of this guide, you don't need to follow this convention."})]}),"\n",(0,r.jsx)(n.h2,{id:"prototyping-your-transformation-using-presto-sql",children:"Prototyping your transformation using Presto SQL"}),"\n",(0,r.jsx)(n.p,{children:"Imagine we want to perform analysis on the number and duration of parking permit renewals."}),"\n",(0,r.jsx)(n.p,{children:"We first prototype our query inside of AWS Athena using its Presto SQL language."}),"\n",(0,r.jsxs)(n.admonition,{title:"Exercise",type:"note",children:[(0,r.jsxs)(n.p,{children:["Create an SQL query for ",(0,r.jsx)(n.a,{href:"https://eu-west-2.console.aws.amazon.com/athena/home?region=eu-west-2#query",children:"AWS Athena"})," which extracts, and aggregates permit renewals and produces\na resultset with the below format."]}),(0,r.jsxs)(n.p,{children:["The data platform provides source data within the table\n",(0,r.jsx)(n.code,{children:'"dataplatform-stg-liberator-raw-zone"."liberator_permit_renewals"'}),"."]}),(0,r.jsxs)(n.p,{children:["You will want to convert VARCHAR columns to ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/athena/latest/ug/data-types.html",children:"appropriate AWS Athena data types"}),".\nSpecifically, the time columns should have a TIMESTAMP type.\nPresto SQL provide a variety of ",(0,r.jsx)(n.a,{href:"https://prestodb.io/docs/0.217/functions/datetime.html",children:"date/time functions"}),".\nNote that some of the renewal records have empty string values which may cause a cryptic error\nmessage to appear when passing an empty string into a time function."]}),(0,r.jsx)(n.p,{children:"Keep a copy of the query you create somewhere safe, for the next part of this guide."})]}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"permit_reference"}),(0,r.jsx)("th",{children:"earliest_start_date"}),(0,r.jsx)("th",{children:"latest_end_date"}),(0,r.jsx)("th",{children:"number_of_renewals"}),(0,r.jsx)("th",{children:"import_year"}),(0,r.jsx)("th",{children:"import_month"}),(0,r.jsx)("th",{children:"import_day"}),(0,r.jsx)("th",{children:"import_date"})]})}),(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"XXXYYYYYYY"}),(0,r.jsx)("td",{children:"2017-01-02 00:00:00"}),(0,r.jsx)("td",{children:"2018-01-02 00:00:00"}),(0,r.jsx)("td",{children:"2"}),(0,r.jsx)("td",{children:"2021"}),(0,r.jsx)("td",{children:"04"}),(0,r.jsx)("td",{children:"15"})]})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsxs)("summary",{children:[(0,r.jsx)("b",{children:"Answer"}),", reveal once you've attempted the above."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT\n      permit_reference,\n      MAX(DATE_PARSE(NULLIF(renewal_end_date, ''), '%Y-%m-%d %H:%i:%S')) AS last_end_date,\n      MIN(DATE_PARSE(NULLIF(renewal_start_date, ''), '%Y-%m-%d %H:%i:%S')) AS earliest_start_date,\n      COUNT(*) AS number_of_renewals,\n      import_year, import_month, import_day, import_date\nFROM \"dataplatform-stg-liberator-raw-zone\".\"liberator_permit_renewals\"\nGROUP BY permit_reference, import_year, import_month, import_day, import_date\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"moving-your-query-to-aws-glue-studio",children:"Moving your query to AWS Glue Studio"}),"\n",(0,r.jsxs)(n.p,{children:["Once you have written, and seen a successful execution of your query in AWS Athena, we can move onto\ncreating an AWS Glue Job which will transform and copy the ",(0,r.jsx)(n.code,{children:"dataplatform-stg-raw-zone"})," data\ninto the ",(0,r.jsx)(n.code,{children:"dataplatform-stg-refined-zone"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Turning our first query into a Glue Job which transforms the data into a new dataset, will allow us\nto share this into a permit renewals dashboard on Google Data Studio."}),"\n",(0,r.jsxs)(n.p,{children:["We will first create a new AWS Glue Studio job by following a modified version of the guide\n",(0,r.jsx)(n.a,{href:"/Data-Platform-Playbook/playbook/transforming-data/using-aws-glue/using-glue-studio#creating-a-new-glue-job",children:"creating a new Glue Job"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For the environment, we'll be using ",(0,r.jsx)(n.code,{children:"stg"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.strong,{children:"Data source"})," node, we'll select ",(0,r.jsx)(n.strong,{children:"Data catalogue table"}),' for "S3 source type"\nunder the "Data source properties" tab.\nThen choosing ',(0,r.jsx)(n.code,{children:"dataplatform-stg-liberator-raw-zone"})," and ",(0,r.jsx)(n.code,{children:"liberator_permit_renewals"}),"\nfor Database and Table respectively."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.strong,{children:"Data target"})," node:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'Set the Format to "Glue Parquet"'}),"\n",(0,r.jsxs)(n.li,{children:["Specify the destination as ",(0,r.jsx)(n.code,{children:"s3://dataplatform-stg-refined-zone/parking/liberator/NAME_parking_permit_renewals/"}),"."]}),"\n",(0,r.jsx)(n.li,{children:'For "Data Catalog update options" select "Create a table in the Data Catalog and on subsequent runs, update the schema and add new partitions".'}),"\n",(0,r.jsx)(n.li,{children:'For "Database" select "dataplatform-stg-liberator-refined-zone" from the dropdown.'}),"\n",(0,r.jsxs)(n.li,{children:['In "Table name" write ',(0,r.jsx)(n.code,{children:"NAME_parking_permit_renewals"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Under the parition keys, add in the following order: ",(0,r.jsx)(n.code,{children:"import_year"}),", ",(0,r.jsx)(n.code,{children:"import_month"}),", ",(0,r.jsx)(n.code,{children:"import_day"}),", ",(0,r.jsx)(n.code,{children:"import_date"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.strong,{children:"Name"})," of the job, specify ",(0,r.jsx)(n.code,{children:"NAME_GlueStudioWorkshop"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.strong,{children:"IAM Role"})," of the job, specify ",(0,r.jsx)(n.code,{children:"dataplatform-stg-parking-glue"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'For the "Number of retries" under "Job details" specify 0.'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'For the "Security configuration" select "dataplatform-stg-config-to-refined".'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["AWS Glue enables a feature called ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/glue/latest/dg/monitor-continuations.html",children:"Job Bookmarks"})," by default."]}),(0,r.jsx)(n.p,{children:"Job bookmarks cause a glue job to perform its batch processing on data which has not\nalready been processed previously by the same job."}),(0,r.jsx)(n.p,{children:'This is useful to reduce the cost of processing, but when developing jobs you will\nwant to temporarily disable this feature from the "Job Details" tab.'})]}),"\n",(0,r.jsx)(n.p,{children:"Once you have created and saved this job, we will replace the default transformation with\nour SQL created above."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:'Switch to the "Visual" tab, and click on the "Transform - ApplyMapping" node.\nIn the properties bar on the right, switch to the "Node Properties" tab and change the "Node Type"\nto "Spark SQL".'}),"\n",(0,r.jsx)(n.li,{children:'Switch to the "Transform" tab paste in your SQL query from above into the "Code Block" box.\nThe Spark SQL executor will only accept a single SQL query, and that query mustn\'t have\na trailing semicolon.'}),"\n",(0,r.jsxs)(n.li,{children:['Change the value of "Spark SQL aliases" to ',(0,r.jsx)(n.code,{children:"liberator_permit_renewals"}),", and remove any usage of a\ndatabase prefix ",(0,r.jsx)(n.code,{children:"dataplatform-stg-liberator-raw-zone"}),' from the SQL query inside of the "Code Block".\nIf your query joined multiple tables, each table would need a distinct "Data Source" linked\nto the "Spark SQL" node.']}),"\n",(0,r.jsxs)(n.li,{children:["Click the ",(0,r.jsx)(n.strong,{children:"Save"})," button, followed by the ",(0,r.jsx)(n.strong,{children:"Run"})," button."]}),"\n",(0,r.jsx)(n.li,{children:'Click on the "Runs" tab, and follow the progress of your job.'}),"\n",(0,r.jsx)(n.li,{children:"Once finished, the job might fail with an error message similar to this"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"AnalysisException: \"\n  Undefined function: 'date_parse'.\n  This function is neither a registered temporary function nor a permanent function registered in the database 'default'.\n\"\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Exercise",type:"note",children:[(0,r.jsxs)(n.p,{children:['Switching back to the "Visual" tab, continue modifying, saving and running the SQL query\nof your AWS Glue job until the "Run status" becomes "Succeeded".\nThe Spark SQL ',(0,r.jsx)(n.code,{children:"to_timestamp"})," ",(0,r.jsx)(n.a,{href:"https://spark.apache.org/docs/latest/api/sql/index.html#to_timestamp",children:"function documentation"})," might be useful."]}),(0,r.jsxs)(n.p,{children:["Confirm your AWS Glue Job has worked as you expected by querying the newly created table\nin ",(0,r.jsx)(n.a,{href:"https://eu-west-2.console.aws.amazon.com/athena/home?region=eu-west-2#query",children:"AWS Athena"})," under the database ",(0,r.jsx)(n.code,{children:"dataplatform-stg-liberator-refined-zone"}),", with the\nname ",(0,r.jsx)(n.code,{children:"NAME_parking_permit_renewals"}),"."]})]}),"\n",(0,r.jsx)(n.h2,{id:"cleaning-up",children:"Cleaning up"}),"\n",(0,r.jsx)(n.p,{children:"Once you have finished the exercise"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Find and delete your job within ",(0,r.jsx)(n.a,{href:"https://eu-west-2.console.aws.amazon.com/glue/home?region=eu-west-2#etl:tab=jobs",children:"AWS Glue Jobs list"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["From the ",(0,r.jsx)(n.a,{href:"https://s3.console.aws.amazon.com/s3/buckets/dataplatform-stg-refined-zone?region=eu-west-2&prefix=parking/liberator/&showversions=false",children:"S3 console"}),", delete the folders your job created.\nThere will be a folder called ",(0,r.jsx)(n.code,{children:"NAME_parking_permit_renewals"})," and a file called ",(0,r.jsx)(n.code,{children:"NAME_parking_permit_renewals_$folder$"}),"\nto delete."]}),"\n",(0,r.jsxs)(n.li,{children:["Delete the table created within the ",(0,r.jsx)(n.a,{href:"https://eu-west-2.console.aws.amazon.com/glue/home?region=eu-west-2#catalog:tab=tables",children:"AWS Glue table"})," interface.\nYou can find the table by searching for ",(0,r.jsx)(n.code,{children:"NAME_parking_permit_renewals"})," within the search box."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);