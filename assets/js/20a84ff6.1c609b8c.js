"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[9204],{1068:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(4848),s=a(8453);const i={title:"2. Basic Time Series helpers",description:"Generally useful Time Series Helpers",layout:"playbook_js",tags:["playbook"]},r="Basic Time Series helpers",l={id:"playbook/querying-and-analysing-data/time-series-analysis/basic_helpers",title:"2. Basic Time Series helpers",description:"Generally useful Time Series Helpers",source:"@site/docs/playbook/querying-and-analysing-data/time-series-analysis/2-basic_helpers.md",sourceDirName:"playbook/querying-and-analysing-data/time-series-analysis",slug:"/playbook/querying-and-analysing-data/time-series-analysis/basic_helpers",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/basic_helpers",draft:!1,unlisted:!1,editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/querying-and-analysing-data/time-series-analysis/2-basic_helpers.md",tags:[{inline:!0,label:"playbook",permalink:"/Data-Platform-Playbook/tags/playbook"}],version:"current",sidebarPosition:2,frontMatter:{title:"2. Basic Time Series helpers",description:"Generally useful Time Series Helpers",layout:"playbook_js",tags:["playbook"]},sidebar:"docs",previous:{title:"1. Introduction to Time Series Helpers",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/introduction"},next:{title:"3. Step by Step Guide to Forecasting",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/step_by_step_example"}},o={},d=[{value:"Data Reshaping",id:"data-reshaping",level:3},{value:"Usage Example",id:"usage-example",level:3},{value:"Finding Start and End Date",id:"finding-start-and-end-date",level:3},{value:"Making Train Test subsets by count",id:"making-train-test-subsets-by-count",level:3},{value:"Why would we want to do this?",id:"why-would-we-want-to-do-this",level:3},{value:"Usage Example",id:"usage-example-1",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"basic-time-series-helpers",children:"Basic Time Series helpers"})}),"\n",(0,n.jsx)(t.p,{children:"These are the helpers which are going to be useful regardless of the model you want to use"}),"\n",(0,n.jsx)(t.h3,{id:"data-reshaping",children:"Data Reshaping"}),"\n",(0,n.jsx)(t.p,{children:"For simple Time Series forecasting, you generally want a dataframe or series with just the metric and  the date in the index, evenly spaced apart"}),"\n",(0,n.jsx)(t.p,{children:"For example, The count of records (Metric) in each month (Date)"}),"\n",(0,n.jsx)(t.p,{children:"We have a helper function which can help you transform your data into this format"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"from scripts.helpers.time_series_helpers import reshape_time_series_data\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"def reshape_time_series_data(\n  pdf: ps.DataFrame,\n  date_col: str,\n  var_cols: list,\n  dateformat: str\n)\n\nreturns ps.DataFrame\n"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"pdf: Your Dataframe"}),"\n",(0,n.jsx)(t.li,{children:"date_col: The name of the date column, this will be converted into the index"}),"\n",(0,n.jsx)(t.li,{children:"var_cols: The name of the metrics you want to use, in a list. A lot of the time you only want a single metric"}),"\n",(0,n.jsx)(t.li,{children:"dateformat: Format of your date. For example YYYY/MM/DD would be %Y/%m%d"}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,n.jsx)(t.p,{children:"Lets say you have a dataframe, with various metric columns but you wanted to just keep one of them, in particular the one called total_call_time"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'reshaped_df = reshape_time_series_data(pdf,"date",["total_call_time"], "%Y/%M/%d")\n\n'})}),"\n",(0,n.jsx)(t.h3,{id:"finding-start-and-end-date",children:"Finding Start and End Date"}),"\n",(0,n.jsx)(t.p,{children:"Some forecast functions will need a start and end date. If you need to quickly find these out from your data and the amount of prediction points, we have a function for that"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"from scripts.helpers.time_series_helpers import reshape_time_series_data\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"def get_start_end_date(\n  dataframe: pd.DataFrame,\n  period: str,\n  forecast_count: int\n)\n\nreturns start_date date,end_date date\n"})}),"\n",(0,n.jsx)(t.p,{children:"So an example of calling this would be"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'start_date, end_date = get_start_end_date(df,"M",12)\n'})}),"\n",(0,n.jsx)(t.p,{children:'If the final date in the index of DF is "01/12/2022"'}),"\n",(0,n.jsx)(t.p,{children:'start_date = "01/01/2023"'}),"\n",(0,n.jsx)(t.p,{children:'end_date = "01/12/2023"'}),"\n",(0,n.jsx)(t.h3,{id:"making-train-test-subsets-by-count",children:"Making Train Test subsets by count"}),"\n",(0,n.jsx)(t.p,{children:"When evaluating models, we use something called Train Test as a testing methodology"}),"\n",(0,n.jsx)(t.h3,{id:"why-would-we-want-to-do-this",children:"Why would we want to do this?"}),"\n",(0,n.jsx)(t.p,{children:"This function will split your data into 2 parts for this purpose"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"from scripts.helpers.time_series_helpers import get_train_test_subsets\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"def get_train_test_subsets(\n  time_series: ps.DataFrame,\n  periods: int):\n\nReturns:\n  Train(DataFrame),Test(DataFrame)\n\n"})}),"\n",(0,n.jsx)(t.h3,{id:"usage-example-1",children:"Usage Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"train, test = get_train_test_subsets(pdf,6)\n"})}),"\n",(0,n.jsx)(t.p,{children:"If pdf is of length 10, train will be of length 4 and test will be of length 6\nIf pdf is of length 100, train will be of length 94 and test will be of length 6"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>l});var n=a(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);