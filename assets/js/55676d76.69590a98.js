"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[8637],{1265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=n(4848),o=n(8453);const s={title:"Exponential Smoothing ETS",description:"Forecast using Exponential Smoothing",layout:"playbook_js",tags:["playbook"]},i="Exponential Smoothing ETS",r={id:"playbook/querying-and-analysing-data/time-series-analysis/exponential_smoothing_ets",title:"Exponential Smoothing ETS",description:"Forecast using Exponential Smoothing",source:"@site/docs/playbook/querying-and-analysing-data/time-series-analysis/4-exponential_smoothing_ets.md",sourceDirName:"playbook/querying-and-analysing-data/time-series-analysis",slug:"/playbook/querying-and-analysing-data/time-series-analysis/exponential_smoothing_ets",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/exponential_smoothing_ets",draft:!1,unlisted:!1,editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/playbook/querying-and-analysing-data/time-series-analysis/4-exponential_smoothing_ets.md",tags:[{inline:!0,label:"playbook",permalink:"/Data-Platform-Playbook/tags/playbook"}],version:"current",sidebarPosition:4,frontMatter:{title:"Exponential Smoothing ETS",description:"Forecast using Exponential Smoothing",layout:"playbook_js",tags:["playbook"]},sidebar:"docs",previous:{title:"3. Step by Step Guide to Forecasting",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/step_by_step_example"},next:{title:"Holt Winters ETS",permalink:"/Data-Platform-Playbook/playbook/querying-and-analysing-data/time-series-analysis/holt_winters_ets"}},l={},d=[];function p(e){const t={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"exponential-smoothing-ets",children:"Exponential Smoothing ETS"})}),"\n",(0,a.jsx)(t.p,{children:"Creates a generic ETS forecast with some seasonal values already filled in."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://www.statsmodels.org/dev/generated/statsmodels.tsa.exponential_smoothing.ets.ETSModel.html",children:"https://www.statsmodels.org/dev/generated/statsmodels.tsa.exponential_smoothing.ets.ETSModel.html"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"from scripts.helpers.time_series_helpers import forecast_ets\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'def forecast_ets(\n  dataframe: pd.DataFrame,\n  start_date: str,\n  end_date: str,\n  seasonal_period: str = "none",\n  error: str = "add",\n  trend: str = "add",\n  damped_trend: bool = False):\n   \n  Returns:\n    Forecast Results (Dataframe)\n'})}),"\n",(0,a.jsx)(t.p,{children:"Required Arguements:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Dataframe (dataframe): Dataframe containing training timeseries dataset."}),"\n",(0,a.jsx)(t.li,{children:"start_date (string): Start date of the Forecast,"}),"\n",(0,a.jsx)(t.li,{children:"end_date (string): End date of the Forecast"}),"\n",(0,a.jsx)(t.li,{children:'seasonal_period (String) Optional: Period for the data. "M" /  "W" / "Q" this will fill in the parameters for the model based on very commonly used values, not including days. Default is "none", use "none" if the data is not seasonal'}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Optional Arguements:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"error (String): The error model. \u201cadd\u201d (default) or \u201cmul\u201d."}),"\n",(0,a.jsx)(t.li,{children:"trend (String): The trend component model. \u201cadd\u201d (default), \u201cmul\u201d, or None."}),"\n",(0,a.jsx)(t.li,{children:"damped_trend (Bool): Whether an included trend component is damped. Default is False."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"For example, if you have monthly data, it is quite common to want to check for yearly seasonality, simply doing the following will give you a forecast"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'forecast = forecast_ets(df,start_date,end_date,"M")\n'})}),"\n",(0,a.jsx)(t.p,{children:"ETS Forecast using seasonality set to 12 for months in a year"})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const o={},s=a.createContext(o);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);