"use strict";(self.webpackChunkdata_platform_playbook=self.webpackChunkdata_platform_playbook||[]).push([[2803],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=n,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return a?r.createElement(f,i(i({ref:t},c),{},{components:a})):r.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7809:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={id:"ux",title:"\ud83d\udcdaUX",description:"The DAP\u21e8flow guide for data analysts and engineers, for developing and deploying Airflow DAGs, running data pipelines in the Data Analytics Platform (DAP).",layout:"playbook_js",tags:["dap-airflow"]},i="\ud83d\udcdaUX",l={unversionedId:"dap-airflow/ux",id:"dap-airflow/ux",title:"\ud83d\udcdaUX",description:"The DAP\u21e8flow guide for data analysts and engineers, for developing and deploying Airflow DAGs, running data pipelines in the Data Analytics Platform (DAP).",source:"@site/docs/dap-airflow/ux.md",sourceDirName:"dap-airflow",slug:"/dap-airflow/ux",permalink:"/Data-Platform-Playbook/dap-airflow/ux",draft:!1,editUrl:"https://github.com/LBHackney-IT/data-platform-playbook/edit/master/docs/dap-airflow/ux.md",tags:[{label:"dap-airflow",permalink:"/Data-Platform-Playbook/tags/dap-airflow"}],version:"current",frontMatter:{id:"ux",title:"\ud83d\udcdaUX",description:"The DAP\u21e8flow guide for data analysts and engineers, for developing and deploying Airflow DAGs, running data pipelines in the Data Analytics Platform (DAP).",layout:"playbook_js",tags:["dap-airflow"]},sidebar:"docs",previous:{title:"GitHub pull requests",permalink:"/Data-Platform-Playbook/dap-airflow/onboarding/github-pull-request"},next:{title:"Introduction",permalink:"/Data-Platform-Playbook/architecture-decisions/"}},s={},p=[{value:"\ud83d\udcdaUser eXperience criteria",id:"user-experience-criteria",level:2},{value:"Before you begin",id:"before-you-begin",level:3},{value:"Welcome!",id:"welcome",level:3},{value:"AWS Console access",id:"aws-console-access",level:3},{value:"AWS region",id:"aws-region",level:3},{value:"Amazon Athena",id:"amazon-athena",level:3},{value:"My current service data",id:"my-current-service-data",level:3},{value:"My service data history",id:"my-service-data-history",level:3},{value:"Query my service data",id:"query-my-service-data",level:3},{value:"Prototype simple transforms",id:"prototype-simple-transforms",level:3},{value:"Prototype legacy transforms",id:"prototype-legacy-transforms",level:3},{value:"GitHub access",id:"github-access",level:3},{value:"GitHub branching",id:"github-branching",level:3},{value:"Committing transforms",id:"committing-transforms",level:3},{value:"GitHub pull requests",id:"github-pull-requests",level:3},{value:"\ud83d\udcdaComing soon...",id:"coming-soon",level:2},{value:"Merging branches",id:"merging-branches",level:3},{value:"Airflow",id:"airflow",level:3},{value:"Adding tables to the raw-zone",id:"adding-tables-to-the-raw-zone",level:3}],c={toc:p},m="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ux"},"\ud83d\udcda",(0,n.kt)("inlineCode",{parentName:"h1"},"UX")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"DAP\u21e8flow",src:a(4673).Z,width:"1930",height:"347"}),"  "),(0,n.kt)("h2",{id:"user-experience-criteria"},"\ud83d\udcdaUser eXperience criteria"),(0,n.kt)("p",null,"The links below will take you directly to the ",(0,n.kt)("strong",{parentName:"p"},"\ud83d\udcda",(0,n.kt)("inlineCode",{parentName:"strong"},"UX")," criteria")," within each of the ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow")," onboarding guides."),(0,n.kt)("h3",{id:"before-you-begin"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/begin#ux-criteria"},"Before you begin")),(0,n.kt)("p",null,"What must happen before I can begin ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow"),"?"),(0,n.kt)("h3",{id:"welcome"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/welcome#ux-criteria"},"Welcome!")),(0,n.kt)("p",null,"What are my ",(0,n.kt)("strong",{parentName:"p"},"Service Terms",(0,n.kt)("inlineCode",{parentName:"strong"},"[]")),"?"),(0,n.kt)("h3",{id:"aws-console-access"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/access-the-AWS-Management-Console#ux-criteria"},"AWS Console access")),(0,n.kt)("p",null,"How will I access the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"AWS Management Console")),"?"),(0,n.kt)("h3",{id:"aws-region"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/access-the-AWS-region#ux-criteria"},"AWS region")),(0,n.kt)("p",null,"How will I ensure I am in the correct ",(0,n.kt)("strong",{parentName:"p"},"AWS region"),"?"),(0,n.kt)("h3",{id:"amazon-athena"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/access-my-Amazon-Athena-database#ux-criteria"},"Amazon Athena")),(0,n.kt)("p",null,"How will I use ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena"))," to access my database?"),(0,n.kt)("h3",{id:"my-current-service-data"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/access-my-current-service-data#ux-criteria"},"My current service data")),(0,n.kt)("p",null,"How will I access my ",(0,n.kt)("inlineCode",{parentName:"p"},"[service]"),"'s current data from ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena")),"?"),(0,n.kt)("h3",{id:"my-service-data-history"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/access-my-service-data-history#ux-criteria"},"My service data history")),(0,n.kt)("p",null,"How will I access my ",(0,n.kt)("inlineCode",{parentName:"p"},"[service]"),"'s data history from ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena")),"?"),(0,n.kt)("h3",{id:"query-my-service-data"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/query-my-service-data#ux-criteria"},"Query my service data")),(0,n.kt)("p",null,"How will I query and analyze my ",(0,n.kt)("inlineCode",{parentName:"p"},"[service]"),"'s data with ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena")),"?"),(0,n.kt)("h3",{id:"prototype-simple-transforms"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/prototype-simple-transforms#ux-criteria"},"Prototype simple transforms")),(0,n.kt)("p",null,"How can I use ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena"))," to prototype a simple table-join data transformation?"),(0,n.kt)("h3",{id:"prototype-legacy-transforms"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/prototype-legacy-transforms#ux-criteria"},"Prototype legacy transforms")),(0,n.kt)("p",null,"How do I use ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Amazon Athena"))," to prototype a data transformation from my ",(0,n.kt)("inlineCode",{parentName:"p"},"[legacy SQL query]"),"?"),(0,n.kt)("h3",{id:"github-access"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/github-access#ux-criteria"},"GitHub access")),(0,n.kt)("p",null,"How do I set up my ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"GitHub"))," access for ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow"),"?"),(0,n.kt)("h3",{id:"github-branching"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/github-branch#ux-criteria"},"GitHub branching")),(0,n.kt)("p",null,"How do I create ",(0,n.kt)("inlineCode",{parentName:"p"},"[transform branch]")," as my new working branch of ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow"),"'s repository?"),(0,n.kt)("h3",{id:"committing-transforms"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/github-commit-transform#ux-criteria"},"Committing transforms")),(0,n.kt)("p",null,"How do I commit my working ",(0,n.kt)("inlineCode",{parentName:"p"},"[transform SQL]")," to ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow"),"'s repository?"),(0,n.kt)("h3",{id:"github-pull-requests"},(0,n.kt)("a",{parentName:"h3",href:"../dap-airflow/onboarding/github-pull-request#ux-criteria"},"GitHub pull requests")),(0,n.kt)("p",null,"How do I raise a ",(0,n.kt)("em",{parentName:"p"},'"pull request"')," to merge my ",(0,n.kt)("inlineCode",{parentName:"p"},"[transform branch]")," into the ",(0,n.kt)("inlineCode",{parentName:"p"},"main")," trunk of the ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow")," repository?"),(0,n.kt)("h2",{id:"coming-soon"},"\ud83d\udcdaComing soon..."),(0,n.kt)("p",null,"The following guides are due for completion."),(0,n.kt)("h3",{id:"merging-branches"},"Merging branches"),(0,n.kt)("p",null,"How do i complete the merge of ",(0,n.kt)("inlineCode",{parentName:"p"},"[transform branch]")," into the main trunk of ",(0,n.kt)("strong",{parentName:"p"},"DAP\u21e8flow"),"'s repository?"),(0,n.kt)("h3",{id:"airflow"},"Airflow"),(0,n.kt)("p",null,"How will I access my data transforms using ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Airflow"))," on the web?"),(0,n.kt)("h3",{id:"adding-tables-to-the-raw-zone"},"Adding tables to the raw-zone"),(0,n.kt)("p",null,"How do i add a new table ingestion to my ",(0,n.kt)("inlineCode",{parentName:"p"},"[service raw-zone]")," database?"),(0,n.kt)("br",null),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Apache Airflow",src:a(4621).Z,width:"750",height:"800"})))}d.isMDXComponent=!0},4673:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/DAPairflowFLOWwide-dc996eb46ef834a0086f5996af589442.png"},4621:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/worker_tap_valve_800_wht-c34645452f188ce11a1b52ad32c6543c.jpg"}}]);